import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './App.css';
// Bootstrap Components
import Col from 'react-bootstrap/Col';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Head from 'next/head'
import Navbar from '@/components/Navbar'
import { RecipeSearchResult } from '@/types/recipeTypes';

export default function Home() {
	const [recipeList, setRecipeList] = useState([]);
	const [updated, setUpdated] = useState(false);
	const [recipe, setRecipe] = useState([]);
	=

	const getRecipes = () => {
		const axios = require('axios');

		const options = {
			method: 'GET',
			url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch',
			params: {
				query: 'pasta',
				cuisine: 'italian',
				excludeCuisine: 'greek',
				diet: 'vegetarian',
				intolerances: 'gluten',
				equipment: 'pan',
				includeIngredients: 'tomato,cheese',
				excludeIngredients: 'eggs',
				type: 'main course',
				instructionsRequired: 'true',
				fillIngredients: 'false',
				addRecipeInformation: 'false',
				titleMatch: 'Crock Pot',
				maxReadyTime: '20',
				ignorePantry: 'true',
				sort: 'calories',
				sortDirection: 'asc',
				offset: '0',
				number: '10',
				limitLicense: 'false',
				ranking: '2',
			},
			headers: {
				'X-RapidAPI-Key': process.env.RECIPEAPI_KEY,
				'X-RapidAPI-Host': process.env.RECIPEAPI_HOST,
			},
		};

		axios
			.request(options)
			.then(function (res: RecipeSearchResult) {
				console.log(res.data);
			})
			.catch(function (error) {
				console.error(error);
			});
	};

	const formSubmit = (e) => {
		e.preventDefault();
		getRecipes(e.target.city.value, e.target.state.value);
		setUpdated(!updated);
	};

	useEffect(() => {
		getRecipes();
	}, [updated]);

  return (
		<>
			<Head>
				<title>Meal Planner</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
			</Head>
			<Container>
				<TravelCard
					recipe={recipe}
					setRecipe={setRecipe}
					callApi={callApi}
				/>
				<h1>Weather Travel Guide</h1>
				<form onSubmit={formSubmit}>
					City: <input type='text' name='city' />
					State: <input type='text' name='state' />
					<input type='submit' value='Submit' />
				</form>
				<Row>
					{recipeList
						? recipeList.map((day, i) => {
								if (i % 2 === 0) {
									return (
										<Row key={i}>
											<Col sm={6} md={4}>
												<DayWeather
													day={day}
													city={city}
													recipe={recipe}
													setRecipe={setRecipe}
													callApi={callApi}
												/>
											</Col>
											{recipeList[i + 1] && (
												<Col sm={6} md={4}>
													<DayWeather
														day={recipeList[i + 1]}
														city={city}
														recipe={recipe}
														setRecipe={setRecipe}
														callApi={callApi}
													/>
												</Col>
											)}
										</Row>
									);
								}
								return null;
						})
						: ' '}
				</Row>
			</Container>
		</>
	);
}